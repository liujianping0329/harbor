<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shxp.harbor.dao.ItemDAO">
  <resultMap id="BaseResultMap" type="com.shxp.harbor.po.Item">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="item_group_id" jdbcType="INTEGER" property="itemGroupId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="sannti" jdbcType="VARCHAR" property="sannti" />
    <result column="itemcol" jdbcType="VARCHAR" property="itemcol" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, item_group_id, `name`, `number`, sannti, itemcol
  </sql>
  <select id="selectByExample" parameterType="com.shxp.harbor.po.ItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shxp.harbor.po.ItemExample">
    delete from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shxp.harbor.po.Item">
    insert into item (id, item_group_id, `name`, 
      `number`, sannti, itemcol
      )
    values (#{id,jdbcType=INTEGER}, #{itemGroupId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{sannti,jdbcType=VARCHAR}, #{itemcol,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shxp.harbor.po.Item">
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="itemGroupId != null">
        item_group_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="sannti != null">
        sannti,
      </if>
      <if test="itemcol != null">
        itemcol,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="itemGroupId != null">
        #{itemGroupId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="sannti != null">
        #{sannti,jdbcType=VARCHAR},
      </if>
      <if test="itemcol != null">
        #{itemcol,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shxp.harbor.po.ItemExample" resultType="java.lang.Long">
    select count(*) from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.itemGroupId != null">
        item_group_id = #{record.itemGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        `number` = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.sannti != null">
        sannti = #{record.sannti,jdbcType=VARCHAR},
      </if>
      <if test="record.itemcol != null">
        itemcol = #{record.itemcol,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update item
    set id = #{record.id,jdbcType=INTEGER},
      item_group_id = #{record.itemGroupId,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `number` = #{record.number,jdbcType=VARCHAR},
      sannti = #{record.sannti,jdbcType=VARCHAR},
      itemcol = #{record.itemcol,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shxp.harbor.po.Item">
    update item
    <set>
      <if test="itemGroupId != null">
        item_group_id = #{itemGroupId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="sannti != null">
        sannti = #{sannti,jdbcType=VARCHAR},
      </if>
      <if test="itemcol != null">
        itemcol = #{itemcol,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shxp.harbor.po.Item">
    update item
    set item_group_id = #{itemGroupId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      `number` = #{number,jdbcType=VARCHAR},
      sannti = #{sannti,jdbcType=VARCHAR},
      itemcol = #{itemcol,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>